name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_stable_nix:
    name: Build stable *nix
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macOS]

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt
    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - name: Build debug
      uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Build release
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test

  build_stable_win:
    name: Build stable Windows
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt
    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - name: Install openssl
      run: |
        vcpkg search openssl
        vcpkg install openssl:x64-windows
        vcpkg list
    - name: Build debug
      env:
        VCPKGRS_DYNAMIC: ${{ 1 }}
      run: |
        vcpkg integrate install
        cargo build
    - name: Build release
      env:
        VCPKGRS_DYNAMIC: ${{ 1 }}
      run: |
        vcpkg integrate install
        cargo build --release
    - name: Run tests
      env:
        VCPKGRS_DYNAMIC: ${{ 1 }}
      run: |
        vcpkg integrate install
        cargo test

  build_nightly:
    name: Build beta & nightly
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [beta, nightly]

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Build debug
      continue-on-error: true
      uses: actions-rs/cargo@v1
      with:
        command: build
        
  docs:
    name: Docs
    runs-on: macOS-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Build docs
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --no-deps
